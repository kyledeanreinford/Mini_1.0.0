{"version":3,"sources":["components/services/solves.js","components/PlayerButton.js","components/PlayerFastest.js","App.js","index.js"],"names":["axios","require","get","then","res","data","catch","err","console","log","playerName","average","fastest","worst","time","participated","PlayerButton","className","handleClick","player","onClick","id","alias","name","PlayerFastest","solves","winnerList","wins","setWins","winPercentage","setWinPercentage","setParticipatedLength","players","participatedLength","useEffect","Object","entries","some","key","value","keys","length","toFixed","map","solve","date","App","useState","fastestTen","setFastestTen","setWinnerList","setCurrentPlayerSolves","currentPlayerName","setCurrentPlayerName","currentPlayerFastest","setCurrentPlayerFastest","setAverage","setParticipated","setWorst","e","target","solveService","winners","forEach","sort","a","b","push","count","reduce","tally","href","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfaeb7af.chunk.js","sourcesContent":["const axios = require(\"axios\");\n\nconst fastestTen = () => {\n  const req = axios.get(\"/api/solves/fastestTen\");\n  return req\n    .then((res) => res.data)\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nconst fetchPlayer = (playerName) => {\n  const req = axios.get(`/api/solves/${playerName}`);\n  return req\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nconst fetchPlayerFastest = (playerName) => {\n  const req = axios.get(`/api/solves/${playerName}/fastest`);\n  return req\n    .then((res) => {\n      const average = res.data.average;\n      const fastest = res.data.fastest;\n      const worst = res.data.worst.time;\n      const participated = res.data.participated;\n      return { fastest, average, worst, participated };\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nconst getAllByDate = () => {\n  const req = axios.get(\"/api/solves\");\n  return req.then((res) => {\n    return res.data;\n  });\n};\n\nexport default { fastestTen, fetchPlayer, fetchPlayerFastest, getAllByDate };\n","import React from \"react\";\n\nconst PlayerButton = ({ className, handleClick, player }) => {\n  return (\n    <button className={className} onClick={handleClick} id={player.alias}>\n      {player.name}\n    </button>\n  );\n};\n\nexport default PlayerButton;\n","import React, { useEffect } from \"react\";\n\nconst PlayerFastest = ({\n  name,\n  solves,\n  average,\n  worst,\n  participated,\n  winnerList,\n  wins,\n  setWins,\n  winPercentage,\n  setWinPercentage,\n  players,\n  setParticipatedLength,\n  participatedLength,\n}) => {\n  useEffect(() => {\n    setWins(0);\n    setWinPercentage(0);\n    Object.entries(winnerList).some(([key, value]) => {\n      setParticipatedLength(Object.keys(participated).length);\n      if (key === name) {\n        setWins(value);\n        setWinPercentage(((value / participatedLength) * 100).toFixed(2));\n      }\n    });\n  });\n\n  return (\n    <div>\n      <h2>{name}</h2>\n      <h3>Best Times</h3>\n      {solves.map((solve) => {\n        return (\n          <li key={solve.id}>\n            {solve.time} seconds on {solve.date}\n          </li>\n        );\n      })}\n      <br />\n      <p>Average solve time: {average} seconds.</p>\n      <br />\n      <p>\n        Wins: {wins} (out of {participatedLength})\n      </p>\n      <br />\n      <p>Win Percentage: {winPercentage}%</p>\n      <br />\n      <p>Worst time is {worst} seconds &#129313;</p>\n    </div>\n  );\n};\n\nexport default PlayerFastest;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport solveService from \"./components/services/solves\";\nimport PlayerButton from \"./components/PlayerButton\";\nimport PlayerFastest from \"./components/PlayerFastest\";\nimport TotalWins from \"./components/TotalWins\";\n\nfunction App() {\n  const [fastestTen, setFastestTen] = useState([]);\n  const [winnerList, setWinnerList] = useState([]);\n  const [allByDate, setAllByDate] = useState([]);\n  const [currentPlayerSolves, setCurrentPlayerSolves] = useState([]);\n  const [currentPlayerName, setCurrentPlayerName] = useState();\n  const [currentPlayerFastest, setCurrentPlayerFastest] = useState([]);\n  const [average, setAverage] = useState();\n  const [participated, setParticipated] = useState([]);\n  const [wins, setWins] = useState();\n  const [winPercentage, setWinPercentage] = useState();\n  const [participatedLength, setParticipatedLength] = useState();\n  const [worst, setWorst] = useState();\n  const players = [\n    { name: \"Kyle\", alias: \"kyledeanreinford\" },\n    { name: \"Jeffrey\", alias: \"jalopey\" },\n    { name: \"Ted\", alias: \"The Nuge\" },\n    { name: \"Dane\", alias: \"dâ€™Anthony\" },\n    { name: \"Conor\", alias: \"conor\" },\n    { name: \"David\", alias: \"Szakonyi\" },\n    { name: \"Mark\", alias: \"Mark Miller\" },\n    { name: \"Will\", alias: \"willardsmith\" },\n    { name: \"Eric\", alias: \"Ericki\" },\n  ];\n\n  const handleClick = (e) => {\n    console.log(e.target.id);\n    solveService.fetchPlayer(e.target.id).then((res) => {\n      setCurrentPlayerSolves(res);\n      setCurrentPlayerName(e.target.id);\n    });\n    solveService.fetchPlayerFastest(e.target.id).then((res) => {\n      setParticipatedLength(0);\n      setWinPercentage(0);\n      setCurrentPlayerFastest(res.fastest);\n      setAverage(res.average.toFixed(2));\n      setParticipated(res.participated);\n      setWorst(res.worst);\n    });\n  };\n\n  useEffect(() => {\n    solveService.fastestTen().then((res) => {\n      setFastestTen(res);\n    });\n    solveService.getAllByDate().then((res) => {\n      let winners = [];\n      Object.entries(res).forEach(([key, value]) => {\n        value.sort((a, b) => a.time - b.time);\n        if (value[0].time !== value[1].time) {\n          winners.push(value[0].name);\n        }\n      });\n      const count = winners.reduce((tally, player) => {\n        tally[player] = (tally[player] || 0) + 1;\n        return tally;\n      }, {});\n      setWinnerList(count);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <h1>\n          <a href=\"/  \">New York Times Mini Leaderboard</a>\n        </h1>\n      </div>\n      <div className=\"nav\">\n        <ul>\n          {players.map((player) => {\n            return (\n              <li key={player.name}>\n                <PlayerButton\n                  className=\"btn\"\n                  player={player}\n                  handleClick={handleClick}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"main\">\n        {currentPlayerName && (\n          <PlayerFastest\n            name={currentPlayerName}\n            solves={currentPlayerFastest}\n            average={average}\n            worst={worst}\n            participated={participated}\n            winnerList={winnerList}\n            wins={wins}\n            setWins={setWins}\n            winPercentage={winPercentage}\n            setWinPercentage={setWinPercentage}\n            players={players}\n            setParticipatedLength={setParticipatedLength}\n            participatedLength={participatedLength}\n          />\n        )}\n        {fastestTen && !currentPlayerName && (\n          <div>\n            <h2>Top 10 Times</h2>\n            {fastestTen.map((solve, index) => {\n              return (\n                <li key={index}>\n                  {solve.name}: {solve.time} seconds\n                </li>\n              );\n            })}\n          </div>\n        )}\n        {/* \n        {Object.keys(winnerList).length > 1 && (\n          <TotalWins\n            className=\"total-wins\"\n            players={players}\n            winnerList={winnerList}\n          />\n        )} */}\n      </div>\n      <div className=\"footer\">\n        Made by{\" \"}\n        <a href=\"https://github.com/kyledeanreinford\">Kyle Dean Reinford</a> |\n        Mediocre Coder 2021\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}